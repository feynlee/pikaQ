# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/pikaQ',
                'doc_host': 'https://feynlee.github.io',
                'git_url': 'https://github.com/feynlee/pikaQ',
                'lib_path': 'pikaQ'},
  'syms': { 'pikaQ.core': { 'pikaQ.core.ArithmeticExpression': ('core.html#arithmeticexpression', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__add__': ('core.html#arithmeticexpression.__add__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__eq__': ('core.html#arithmeticexpression.__eq__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__ge__': ('core.html#arithmeticexpression.__ge__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__gt__': ('core.html#arithmeticexpression.__gt__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__init__': ('core.html#arithmeticexpression.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__le__': ('core.html#arithmeticexpression.__le__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__lt__': ('core.html#arithmeticexpression.__lt__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__mul__': ('core.html#arithmeticexpression.__mul__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__ne__': ('core.html#arithmeticexpression.__ne__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__radd__': ('core.html#arithmeticexpression.__radd__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__rmul__': ('core.html#arithmeticexpression.__rmul__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__rsub__': ('core.html#arithmeticexpression.__rsub__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__rtruediv__': ( 'core.html#arithmeticexpression.__rtruediv__',
                                                                              'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__sub__': ('core.html#arithmeticexpression.__sub__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.__truediv__': ('core.html#arithmeticexpression.__truediv__', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.exec': ('core.html#arithmeticexpression.exec', 'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.left_needs_parens': ( 'core.html#arithmeticexpression.left_needs_parens',
                                                                                   'pikaQ/core.py'),
                            'pikaQ.core.ArithmeticExpression.right_needs_parens': ( 'core.html#arithmeticexpression.right_needs_parens',
                                                                                    'pikaQ/core.py'),
                            'pikaQ.core.Case': ('core.html#case', 'pikaQ/core.py'),
                            'pikaQ.core.Case.__init__': ('core.html#case.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Case._as': ('core.html#case._as', 'pikaQ/core.py'),
                            'pikaQ.core.Case.check_prev': ('core.html#case.check_prev', 'pikaQ/core.py'),
                            'pikaQ.core.Case.else_': ('core.html#case.else_', 'pikaQ/core.py'),
                            'pikaQ.core.Case.exec': ('core.html#case.exec', 'pikaQ/core.py'),
                            'pikaQ.core.Case.when': ('core.html#case.when', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria': ('core.html#criteria', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria.__and__': ('core.html#criteria.__and__', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria.__init__': ('core.html#criteria.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria.__or__': ('core.html#criteria.__or__', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria.compose_criteria': ('core.html#criteria.compose_criteria', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria.exec': ('core.html#criteria.exec', 'pikaQ/core.py'),
                            'pikaQ.core.Criteria.resolve': ('core.html#criteria.resolve', 'pikaQ/core.py'),
                            'pikaQ.core.CustomFunction': ('core.html#customfunction', 'pikaQ/core.py'),
                            'pikaQ.core.CustomFunction.__call__': ('core.html#customfunction.__call__', 'pikaQ/core.py'),
                            'pikaQ.core.CustomFunction.__init__': ('core.html#customfunction.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedFunc': ('core.html#delayedfunc', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedFunc.__init__': ('core.html#delayedfunc.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedFunc.exec': ('core.html#delayedfunc.exec', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedPipeline': ('core.html#delayedpipeline', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedPipeline.__getattr__': ('core.html#delayedpipeline.__getattr__', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedPipeline.__init__': ('core.html#delayedpipeline.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedPipeline._order_dp': ('core.html#delayedpipeline._order_dp', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedPipeline.exec': ('core.html#delayedpipeline.exec', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedPipeline.res': ('core.html#delayedpipeline.res', 'pikaQ/core.py'),
                            'pikaQ.core.Field': ('core.html#field', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__add__': ('core.html#field.__add__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__eq__': ('core.html#field.__eq__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__ge__': ('core.html#field.__ge__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__gt__': ('core.html#field.__gt__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__init__': ('core.html#field.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__le__': ('core.html#field.__le__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__lt__': ('core.html#field.__lt__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__mul__': ('core.html#field.__mul__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__ne__': ('core.html#field.__ne__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__radd__': ('core.html#field.__radd__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__rmul__': ('core.html#field.__rmul__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__rsub__': ('core.html#field.__rsub__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__rtruediv__': ('core.html#field.__rtruediv__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__sub__': ('core.html#field.__sub__', 'pikaQ/core.py'),
                            'pikaQ.core.Field.__truediv__': ('core.html#field.__truediv__', 'pikaQ/core.py'),
                            'pikaQ.core.Following': ('core.html#following', 'pikaQ/core.py'),
                            'pikaQ.core.Following.__init__': ('core.html#following.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Following.exec': ('core.html#following.exec', 'pikaQ/core.py'),
                            'pikaQ.core.Joiner': ('core.html#joiner', 'pikaQ/core.py'),
                            'pikaQ.core.Joiner.__init__': ('core.html#joiner.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Joiner.on': ('core.html#joiner.on', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause': ('core.html#overclause', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause.__init__': ('core.html#overclause.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause._check_rows_or_range': ('core.html#overclause._check_rows_or_range', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause._resolve_over_statement': ( 'core.html#overclause._resolve_over_statement',
                                                                               'pikaQ/core.py'),
                            'pikaQ.core.OverClause.as_': ('core.html#overclause.as_', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause.exec': ('core.html#overclause.exec', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause.orderby': ('core.html#overclause.orderby', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause.over': ('core.html#overclause.over', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause.range': ('core.html#overclause.range', 'pikaQ/core.py'),
                            'pikaQ.core.OverClause.rows': ('core.html#overclause.rows', 'pikaQ/core.py'),
                            'pikaQ.core.Preceding': ('core.html#preceding', 'pikaQ/core.py'),
                            'pikaQ.core.Preceding.__init__': ('core.html#preceding.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Preceding.exec': ('core.html#preceding.exec', 'pikaQ/core.py'),
                            'pikaQ.core.Query': ('core.html#query', 'pikaQ/core.py'),
                            'pikaQ.core.Query.from_': ('core.html#query.from_', 'pikaQ/core.py'),
                            'pikaQ.core.Query.with_': ('core.html#query.with_', 'pikaQ/core.py'),
                            'pikaQ.core.QueryBase': ('core.html#querybase', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery': ('core.html#selectquery', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.__add__': ('core.html#selectquery.__add__', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.__getattr__': ('core.html#selectquery.__getattr__', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.__init__': ('core.html#selectquery.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.__mul__': ('core.html#selectquery.__mul__', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery._resolve': ('core.html#selectquery._resolve', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.exec': ('core.html#selectquery.exec', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.join': ('core.html#selectquery.join', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.select': ('core.html#selectquery.select', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.union': ('core.html#selectquery.union', 'pikaQ/core.py'),
                            'pikaQ.core.SelectQuery.union_all': ('core.html#selectquery.union_all', 'pikaQ/core.py'),
                            'pikaQ.core.Selector': ('core.html#selector', 'pikaQ/core.py'),
                            'pikaQ.core.Selector.__getattr__': ('core.html#selector.__getattr__', 'pikaQ/core.py'),
                            'pikaQ.core.Selector.__init__': ('core.html#selector.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Selector.distinct': ('core.html#selector.distinct', 'pikaQ/core.py'),
                            'pikaQ.core.Table': ('core.html#table', 'pikaQ/core.py'),
                            'pikaQ.core.Table.__getattr__': ('core.html#table.__getattr__', 'pikaQ/core.py'),
                            'pikaQ.core.Table.__init__': ('core.html#table.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.Table.as_': ('core.html#table.as_', 'pikaQ/core.py'),
                            'pikaQ.core.Table.exec': ('core.html#table.exec', 'pikaQ/core.py'),
                            'pikaQ.core.UnionQuery': ('core.html#unionquery', 'pikaQ/core.py'),
                            'pikaQ.core.UnionQuery.__init__': ('core.html#unionquery.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.UnionQuery.exec': ('core.html#unionquery.exec', 'pikaQ/core.py'),
                            'pikaQ.core._kwargs_func': ('core.html#_kwargs_func', 'pikaQ/core.py'),
                            'pikaQ.core._over': ('core.html#_over', 'pikaQ/core.py'),
                            'pikaQ.core.add_months': ('core.html#add_months', 'pikaQ/core.py'),
                            'pikaQ.core.as_': ('core.html#as_', 'pikaQ/core.py'),
                            'pikaQ.core.custom_func': ('core.html#custom_func', 'pikaQ/core.py'),
                            'pikaQ.core.delayed_func': ('core.html#delayed_func', 'pikaQ/core.py'),
                            'pikaQ.core.eval_type': ('core.html#eval_type', 'pikaQ/core.py'),
                            'pikaQ.core.exec': ('core.html#exec', 'pikaQ/core.py'),
                            'pikaQ.core.patch_method': ('core.html#patch_method', 'pikaQ/core.py'),
                            'pikaQ.core.patch_to': ('core.html#patch_to', 'pikaQ/core.py'),
                            'pikaQ.core.quote_symbol': ('core.html#quote_symbol', 'pikaQ/core.py'),
                            'pikaQ.core.to_sql': ('core.html#to_sql', 'pikaQ/core.py'),
                            'pikaQ.core.union2tuple': ('core.html#union2tuple', 'pikaQ/core.py')},
            'pikaQ.terms': { 'pikaQ.terms.ArithmeticExpression': ('terms.html#arithmeticexpression', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.__init__': ('terms.html#arithmeticexpression.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.get_sql': ('terms.html#arithmeticexpression.get_sql', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.left_needs_parens': ( 'terms.html#arithmeticexpression.left_needs_parens',
                                                                                     'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.right_needs_parens': ( 'terms.html#arithmeticexpression.right_needs_parens',
                                                                                      'pikaQ/terms.py'),
                             'pikaQ.terms.Case': ('terms.html#case', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.__init__': ('terms.html#case.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.as_': ('terms.html#case.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.else_': ('terms.html#case.else_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.when': ('terms.html#case.when', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria': ('terms.html#criteria', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__and__': ('terms.html#criteria.__and__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__init__': ('terms.html#criteria.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__or__': ('terms.html#criteria.__or__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.add_left_parentheses': ('terms.html#criteria.add_left_parentheses', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.add_parentheses': ('terms.html#criteria.add_parentheses', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.add_right_parentheses': ('terms.html#criteria.add_right_parentheses', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.compose_criteria': ('terms.html#criteria.compose_criteria', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field': ('terms.html#field', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__eq__': ('terms.html#field.__eq__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__ge__': ('terms.html#field.__ge__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__gt__': ('terms.html#field.__gt__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__init__': ('terms.html#field.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__le__': ('terms.html#field.__le__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__lt__': ('terms.html#field.__lt__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__ne__': ('terms.html#field.__ne__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.as_': ('terms.html#field.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.comp': ('terms.html#field.comp', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.ilike': ('terms.html#field.ilike', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.isin': ('terms.html#field.isin', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.isnull': ('terms.html#field.isnull', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.like': ('terms.html#field.like', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.notin': ('terms.html#field.notin', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.notnull': ('terms.html#field.notnull', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table': ('terms.html#table', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.__getattr__': ('terms.html#table.__getattr__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.__init__': ('terms.html#table.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.as_': ('terms.html#table.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.field_name': ('terms.html#table.field_name', 'pikaQ/terms.py')},
            'pikaQ.utils': { 'pikaQ.utils.quote_symbol': ('utils.html#quote_symbol', 'pikaQ/utils.py'),
                             'pikaQ.utils.to_sql': ('utils.html#to_sql', 'pikaQ/utils.py')}}}
