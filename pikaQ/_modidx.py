# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/pikaQ',
                'doc_host': 'https://feynlee.github.io',
                'git_url': 'https://github.com/feynlee/pikaQ',
                'lib_path': 'pikaQ'},
  'syms': { 'pikaQ.core': { 'pikaQ.core.DelayedFunc': ('delayed.html#delayedfunc', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedFunc.__init__': ('delayed.html#delayedfunc.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedFunc.exec': ('delayed.html#delayedfunc.exec', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedTerm': ('delayed.html#delayedterm', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedTerm.__init__': ('delayed.html#delayedterm.__init__', 'pikaQ/core.py'),
                            'pikaQ.core.DelayedTerm.get_sql': ('delayed.html#delayedterm.get_sql', 'pikaQ/core.py')},
            'pikaQ.terms': { 'pikaQ.terms.ArithmeticExpression': ('terms.html#arithmeticexpression', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.__init__': ('terms.html#arithmeticexpression.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.get_sql': ('terms.html#arithmeticexpression.get_sql', 'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.left_needs_parens': ( 'terms.html#arithmeticexpression.left_needs_parens',
                                                                                     'pikaQ/terms.py'),
                             'pikaQ.terms.ArithmeticExpression.right_needs_parens': ( 'terms.html#arithmeticexpression.right_needs_parens',
                                                                                      'pikaQ/terms.py'),
                             'pikaQ.terms.Case': ('terms.html#case', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.__init__': ('terms.html#case.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.as_': ('terms.html#case.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.else_': ('terms.html#case.else_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Case.when': ('terms.html#case.when', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria': ('terms.html#criteria', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__and__': ('terms.html#criteria.__and__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__init__': ('terms.html#criteria.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.__or__': ('terms.html#criteria.__or__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.add_left_parentheses': ('terms.html#criteria.add_left_parentheses', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.add_parentheses': ('terms.html#criteria.add_parentheses', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.add_right_parentheses': ('terms.html#criteria.add_right_parentheses', 'pikaQ/terms.py'),
                             'pikaQ.terms.Criteria.compose_criteria': ('terms.html#criteria.compose_criteria', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field': ('terms.html#field', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__eq__': ('terms.html#field.__eq__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__ge__': ('terms.html#field.__ge__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__gt__': ('terms.html#field.__gt__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__init__': ('terms.html#field.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__le__': ('terms.html#field.__le__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__lt__': ('terms.html#field.__lt__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.__ne__': ('terms.html#field.__ne__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.as_': ('terms.html#field.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.comp': ('terms.html#field.comp', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.ilike': ('terms.html#field.ilike', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.isin': ('terms.html#field.isin', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.isnull': ('terms.html#field.isnull', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.like': ('terms.html#field.like', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.notin': ('terms.html#field.notin', 'pikaQ/terms.py'),
                             'pikaQ.terms.Field.notnull': ('terms.html#field.notnull', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table': ('terms.html#table', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.__getattr__': ('terms.html#table.__getattr__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.__init__': ('terms.html#table.__init__', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.as_': ('terms.html#table.as_', 'pikaQ/terms.py'),
                             'pikaQ.terms.Table.field_name': ('terms.html#table.field_name', 'pikaQ/terms.py')},
            'pikaQ.utils': { 'pikaQ.utils.exec': ('utils.html#exec', 'pikaQ/utils.py'),
                             'pikaQ.utils.get_sql': ('utils.html#get_sql', 'pikaQ/utils.py'),
                             'pikaQ.utils.quote_symbol': ('utils.html#quote_symbol', 'pikaQ/utils.py'),
                             'pikaQ.utils.to_sql': ('utils.html#to_sql', 'pikaQ/utils.py')}}}
