# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_functions.ipynb.

# %% auto 0
__all__ = ['CustomFunction']

# %% ../nbs/03_functions.ipynb 2
from .utils import execute
from .terms import FieldBase, Field, custom_func

# %% ../nbs/03_functions.ipynb 3
class CustomFunction(FieldBase):
    def __init__(self, func_name, arg_names) -> None:
        super().__init__()
        self.func_name = func_name
        self.arg_names = arg_names
        self.get_sql = self.execute
    
    def __call__(self, *args):
        if len(args) != len(self.arg_names):
            raise ValueError(f"The number of args provided {len(args)} is not the same as the number of args expected by this function ({len(self.arg_names)})!")
        def func(*args):
            return f"{self.func_name}({', '.join(args)})"

        self.func = func
        self.args = args
        return self

    def execute(self, **kwargs):
        args = [execute(arg, **kwargs) for arg in self.args]
        return self.func(*args)


